Spring Boot를 사용하는 이유
1. 서버를 만들 수 있는 언어와 프레임워크는 수백 개 존재
- Node.js : 빠른 비동기 처리 서버를 만들고 싶은 경우
- Python : AI 서비스에 붙일 서버를 만들고 싶은 경우
- Next.js : React를 사용하는 것을 선호하는 경우
- Erlang류, Rust, Go : 성능과 동시성을 선호하는 경우
- Spring Boot : 한국에서 가장 많이 사용하는 프레임워크

2. 어렵지 않은 난이도
- Java : 코드 정리와 재사용을 강요하는 역사 깊은 언어
- class가 많이 등장해서 어려워하는 경우 종종 존재
- Spring Boot는 서버를 만드는 프레임워크
- 코드를 작성한다기보다 배치만 하면 정상적으로 돌아가도록 만들어짐
- 코드 작성하는 방법을 잘 몰라도 기술처럼 외워서 사용 가능
- 장점이자 단점

3. AI 시대에는 코딩 방법이 달라짐
- GPT 이후 코딩 AI 생성
- 해당 라이브러리를 사용하는 이유
- 해당 코드를 넣어야 하는 이유
- 해당 구조를 사용하는 이유
- 위의 3가지 등의 큰 그림을 이해하는 것이 더 중요해짐

프로젝트 파일 설명
1. src 폴더 : 실제로 코드를 작성하는 곳
2. resources 폴더 : HTML, CSS, Javascript, 이미지 등의 파일 보관소
3. application.properties 파일 : 환경 변수나 프로젝트 설정 보관하는 곳
4. build.gradle 파일 : 프로젝트 이름, 버전, 라이브러리 등 기록용 파일
5. gradle 관련 파일 : gradle이라는 작업 자동화 프로그램을 돌리는 것을 도와주는 파일들

- 터미널 2개를 오픈
    - ./gradlew build —continuous : 실시간으로 빌드 명령어
    - ./gradlew bootRun : 프로젝트 실행 명령어